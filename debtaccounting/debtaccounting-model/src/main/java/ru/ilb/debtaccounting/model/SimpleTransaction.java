/**
 * This file was generated by the JPA Modeler
 */
package ru.ilb.debtaccounting.model;

import java.io.Serializable;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ManyToOne;
import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.*;

/**
 * @author slavb
 */

@XmlAccessorType(XmlAccessType.FIELD)
@Entity
@DiscriminatorValue("1")
public class SimpleTransaction extends Transaction implements Serializable {

    /**
     * Счет списания
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @NotNull
    private Account fromAccount;

    /**
     * Счет зачисления
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @NotNull
    private Account toAccount;

    public SimpleTransaction(Account fromAccount, Account toAccount) {
        this.fromAccount = fromAccount;
        this.toAccount = toAccount;
    }

    public SimpleTransaction() {
    }

    /**
     * Get счет списания
     *
     * @return {@link #fromAccount}
     */
    public Account getFromAccount() {
        return fromAccount;
    }

    /**
     * Set счет списания
     *
     * @param fromAccount {@link #fromAccount}
     */
    public void setFromAccount(Account fromAccount) {
        this.fromAccount = fromAccount;
    }

    /**
     * Set счет списания
     *
     * @param fromAccount {@link #fromAccount}
     * @return {@link #SimpleTransaction}
     */
    public SimpleTransaction withFromAccount(Account fromAccount) {
        this.fromAccount = fromAccount;
        return this;
    }

    /**
     * Get счет зачисления
     *
     * @return {@link #toAccount}
     */
    public Account getToAccount() {
        return toAccount;
    }

    /**
     * Set счет зачисления
     *
     * @param toAccount {@link #toAccount}
     */
    public void setToAccount(Account toAccount) {
        this.toAccount = toAccount;
    }

    /**
     * Set счет зачисления
     *
     * @param toAccount {@link #toAccount}
     * @return {@link #SimpleTransaction}
     */
    public SimpleTransaction withToAccount(Account toAccount) {
        this.toAccount = toAccount;
        return this;
    }

}