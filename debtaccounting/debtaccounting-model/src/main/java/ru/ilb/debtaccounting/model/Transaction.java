/**
 * This file was generated by the JPA Modeler
 */
package ru.ilb.debtaccounting.model;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.*;

/**
 * @author slavb
 */

@XmlAccessorType(XmlAccessType.FIELD)
@Entity
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(discriminatorType = DiscriminatorType.INTEGER)
public abstract class Transaction implements Serializable {

    @Id
    @GeneratedValue
    private Long id;

    /**
     * Дата транзакции
     */
    @Basic
    private LocalDate date;

    /**
     * Сумма транзакции
     */
    @Basic
    private String amount;

    @ManyToOne(fetch = FetchType.LAZY)
    private Event event;

    @ManyToOne(fetch = FetchType.LAZY)
    private CashFlow cashFlow;

    @OneToMany(mappedBy = "transaction")
    @XmlTransient
    private List<Entry> entries;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Transaction withId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get дата транзакции
     *
     * @return {@link #date}
     */
    public LocalDate getDate() {
        return date;
    }

    /**
     * Set дата транзакции
     *
     * @param date {@link #date}
     */
    public void setDate(LocalDate date) {
        this.date = date;
    }

    /**
     * Set дата транзакции
     *
     * @param date {@link #date}
     * @return {@link #Transaction}
     */
    public Transaction withDate(LocalDate date) {
        this.date = date;
        return this;
    }

    /**
     * Get сумма транзакции
     *
     * @return {@link #amount}
     */
    public String getAmount() {
        return amount;
    }

    /**
     * Set сумма транзакции
     *
     * @param amount {@link #amount}
     */
    public void setAmount(String amount) {
        this.amount = amount;
    }

    /**
     * Set сумма транзакции
     *
     * @param amount {@link #amount}
     * @return {@link #Transaction}
     */
    public Transaction withAmount(String amount) {
        this.amount = amount;
        return this;
    }

    public Event getEvent() {
        return event;
    }

    public void setEvent(Event event) {
        this.event = event;
    }

    public Transaction withEvent(Event event) {
        this.event = event;
        return this;
    }

    public CashFlow getCashFlow() {
        return cashFlow;
    }

    public void setCashFlow(CashFlow cashFlow) {
        this.cashFlow = cashFlow;
    }

    public Transaction withCashFlow(CashFlow cashFlow) {
        this.cashFlow = cashFlow;
        return this;
    }

    public List<Entry> getEntries() {
        if (entries == null) {
            entries = new ArrayList<>();
        }
        return entries;
    }

    public void setEntries(List<Entry> entries) {
        this.entries = entries;
    }

    public Transaction withEntries(List<Entry> entries) {
        this.entries = entries;
        return this;
    }

    public void addEntry(Entry entry) {
        getEntries().add(entry);
        entry.setTransaction(this);
    }

    public void removeEntry(Entry entry) {
        getEntries().remove(entry);
        entry.setTransaction(null);
    }

}